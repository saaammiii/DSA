// #include<bits/stdc++.h>
// vector<int> findStockSpans(vector<int>& prices) {
//     int n=prices.size();
//     vector<int>ans(n);
//     if(n==1){
//         return {1};
//     }
//     stack<pair<int,int>>s;
//     for(auto price:prices){
//       int days=1;
//          while(!s.empty() && s.top().first <= price){
//              days+=s.top().second;
//              s.pop();
//          }
//          s.push({price, days});
//          ans.push_back(days);
//     }
//         return ans;
//     }
#include<bits/stdc++.h>
vector<int> findStockSpans(vector<int>& a) {
    int n=a.size();
    if(n==1)return {1};
    
    stack<pair<int,int>>s;
    vector<int>ans(n);
    int span=1;
    for(int i=0;i<n;i++)
    {
        span=1;
        while(!s.empty() && 
             s.top().first<a[i])
        {
            span+=s.top().second;
            s.pop();
        }
        s.push({a[i],span});
        ans[i]=span;
    }
    return ans;
}
