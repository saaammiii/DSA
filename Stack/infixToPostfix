#include <bits/stdc++.h>
int prec(char c){
	if(c=='^'){
		return 3;
	}
	else if(c=='/' || c=='*'){
		return 2;
	}
	else if(c=='+' || c=='-'){
		return 1;
    } 
	else{
        return -1;
    }
}

string infixToPostfix(string exp){
	int n=exp.size();
	string res="";
	stack<char>st;
	for(int i=0;i<n;i++){
		// if((exp[i]==1 && exp[i]=='z') || (exp[i]=='A' && exp[i]=='Z')){
			if((exp[i]>='a' && exp[i]<='z') || (exp[i]>='A' && exp[i]<='Z') || exp[i]=='1'||exp[i]=='2'||exp[i]=='3'||exp[i]=='4'||exp[i]=='5'||exp[i]=='6'||exp[i]=='7' || exp[i]=='8' ||exp[i]=='9'){
			res+=exp[i];
		}
		else if(exp[i]=='('){
			st.push(exp[i]);
		}
		else if(exp[i]==')'){
			while(!st.empty() && st.top()!='('){
				res+=st.top();
				st.pop();
			}
			if(!st.empty()){
				st.pop();
			}
		}
		else{
			while(!st.empty() && (prec(st.top())>=prec(exp[i]))){
				res+=st.top();
				st.pop();
			}
			st.push(exp[i]);
		}
	}
	while(!st.empty()){
		res+=st.top();
		st.pop();
	}
	return res;
}
